WorstCategoriesChart <- TidyJeopardyData %>%
filter(Category %in% ThreeDayCategories) %>%
group_by(Category) %>%
summarise(TotalCorrect = sum(CorrectAnswer ,na.rm = T)
,TotalPoints = sum(CorrectAnswerPoints ,na.rm = T)) %>%
arrange(TotalCorrect ,TotalPoints) %>%
slice(1:5)
BestCategoriesChart %>%
select(Category) %>%
pull()
WorstCategoriesLevels <- WorstCategoriesChart %>%
select(Category) %>%
pull()
BestCategoriesChart$Category <- factor(BestCategoriesChart$Category ,levels = BestCategoriesLevels)
WorstCategoriesChart$Category <- factor(WorstCategoriesChart$Category ,levels = WorstCategoriesLevels)
TotalCorrectChart
JeopardyData
source("C:/Users/rriesenb/Personal/Jeopardy/Import Current Jeopardy Workbook.R")
RawJeopardyData <- read_excel("Jeopardy Data.xlsx" ,skip = 3)
## Reset point
JeopardyData <- RawJeopardyData
ColumnPatternRemoval <- "\\.\\.\\.|Percent|Glance|Day"
NamePatternRemoval <- " "
NameChangePattern <- "Robert"
JeopardyData <- JeopardyData[ ,!str_detect(colnames(JeopardyData) ,pattern = ColumnPatternRemoval)]
JeopardyData <- JeopardyData %>%
filter(!is.na(Robert) | !is.na(Matt))
colnames(JeopardyData) <- str_remove_all(colnames(JeopardyData) ,pattern = NamePatternRemoval)
colnames(JeopardyData) <- str_replace_all(colnames(JeopardyData) ,pattern = NameChangePattern ,replacement = "RoBert")
JeopardyData <- JeopardyData %>%
mutate(DayOfWeek    = wday(Date ,label = TRUE ,abbr = FALSE)
,JeopardyType = ifelse(Value %in% c(200 ,600 ,1000) ,"Jeopardy" ,ifelse(Value %in% c(400 ,1200 ,2000) ,"Double Jeopardy" ,"Final Jeopardy"))) %>%
select(Week:Date ,DayOfWeek:JeopardyType ,everything()) %>%
arrange(Date)
TidyJeopardyData <- JeopardyData %>%
gather(key = "Player" ,value = "CorrectAnswer" ,-c(Week:Value)) %>%
mutate(CorrectAnswerPoints = CorrectAnswer * Value)
NotEnoughQuestionsAnsweredPlayers <- TidyJeopardyData %>%
group_by(Player) %>%
summarise(MissingDays = sum(is.na(CorrectAnswer))) %>%
filter(MissingDays >= 5) %>%
select(Player) %>%
pull()
CompleteWeeksVector <- TidyJeopardyData %>%
filter(Player == "RoBert") %>%
group_by(Week) %>%
summarise(Count = n()) %>%
filter(Count == 7) %>%
select(Week) %>%
pull()
WeekWinningPlayersCount <- TidyJeopardyData %>%
filter(Week %in% CompleteWeeksVector) %>%
group_by(Week ,Player) %>%
summarise(MaxCorrectAnswerPoints = sum(CorrectAnswerPoints ,na.rm = TRUE)) %>%
top_n(MaxCorrectAnswerPoints ,n=1) %>%
ungroup() %>%
select(Player) %>%
pull() %>%
table() %>%
as_tibble()
colnames(WeekWinningPlayersCount) <- c("Player" ,"WeeksWon")
PlayerList <- TidyJeopardyData %>%
select(Player) %>%
unique()
WeeksWonChart <- PlayerList %>%
left_join(WeekWinningPlayersCount ,by = "Player") %>%
mutate(WeeksWon = ifelse(is.na(WeeksWon) ,0 ,WeeksWon))
ChartLevelsFunction <- function(Dataset ,Variable ,Player) {
LevelVector <- Dataset %>%
arrange(desc(Variable) ,Player) %>%
pull(Player) %>%
rev()
Dataset$Player <- factor(Dataset$Player ,levels = LevelVector)
return(Dataset)
}
WeeksWonChart <- ChartLevelsFunction(WeeksWonChart ,WeeksWonChart$WeeksWon ,WeeksWonChart$Player)
TotalPointsChart <- TidyJeopardyData %>%
group_by(Player) %>%
summarise(CorrectAnswerPoints = sum(CorrectAnswerPoints ,na.rm = TRUE))
TotalPointsChart <- ChartLevelsFunction(TotalPointsChart ,TotalPointsChart$CorrectAnswerPoints ,TotalPointsChart$Player)
TotalCorrectChart <- TidyJeopardyData %>%
group_by(Player) %>%
summarise(CorrectAnswer = sum(CorrectAnswer ,na.rm = TRUE))
TotalCorrectChart <- ChartLevelsFunction(TotalCorrectChart ,TotalCorrectChart$CorrectAnswer ,TotalCorrectChart$Player)
ValuesVector <- TidyJeopardyData %>%
select(Value) %>%
unique() %>%
arrange(Value) %>%
pull()
LongestWrongStreakChart <- TidyJeopardyData %>%
group_by(Player) %>%
summarise(LongestWrongStreak = max(rle(CorrectAnswer == 0)[[1]][rle(CorrectAnswer == 1)[[2]] == 0])
,CurrentWrongStreak = ifelse(rle(CorrectAnswer)$values[length(rle(CorrectAnswer)$values)] == 0 ,0 ,rle(CorrectAnswer)$lengths[length(rle(CorrectAnswer)$lengths)])
) %>%
filter(!is.na(LongestWrongStreak)) %>%
arrange(desc(LongestWrongStreak) ,Player)
LongestWrongStreakChart <- ChartLevelsFunction(LongestWrongStreakChart ,LongestWrongStreakChart$LongestWrongStreak ,LongestWrongStreakChart$Player)
LongestCorrectStreakChart <- TidyJeopardyData %>%
filter(!is.na(CorrectAnswer)) %>%
group_by(Player) %>%
summarise(LongestCorrectStreak = max(rle(CorrectAnswer == 1)[[1]][rle(CorrectAnswer == 0)[[2]] == 0])) %>%
filter(!is.na(LongestCorrectStreak)) %>%
arrange(desc(LongestCorrectStreak) ,Player)
LongestWrongStreakChart <- ChartLevelsFunction(LongestWrongStreakChart ,LongestWrongStreakChart$LongestWrongStreak ,LongestWrongStreakChart$Player)
StreakData <- TidyJeopardyData %>%
filter(!is.na(CorrectAnswer)) %>%
group_by(Player) %>%
summarise(LongestWrongStreak    = max(rle(CorrectAnswer)$lengths[rle(CorrectAnswer)$values==0])
,LongestCorrectStreak = max(rle(CorrectAnswer)$lengths[rle(CorrectAnswer)$values==1])
,CurrentWrongStreak   = ifelse(rle(CorrectAnswer)$values[length(rle(CorrectAnswer)$values)]==0 ,rle(CorrectAnswer)$lengths[rle(CorrectAnswer)$values==0][length(rle(CorrectAnswer)$lengths[rle(CorrectAnswer)$values==0])] ,0)
,CurrentCorrectStreak = ifelse(rle(CorrectAnswer)$values[length(rle(CorrectAnswer)$values)]==1 ,rle(CorrectAnswer)$lengths[rle(CorrectAnswer)$values==1][length(rle(CorrectAnswer)$lengths[rle(CorrectAnswer)$values==1])] ,0)
)
StreakChartData <- StreakData %>%
gather(key = "StreakType" ,value = "Streak" ,-Player) %>%
mutate(CorrectFlag = ifelse(str_detect(StreakType ,pattern = "Correct") ,"Correct" ,"Incorrect")
,LengthType = ifelse(str_detect(StreakType ,pattern = "Longest") ,"Longest" ,"Current")
) %>%
select(Player:StreakType ,CorrectFlag:LengthType ,Streak)
StreakChartData$LengthType <- factor(StreakChartData$LengthType ,levels = c("Longest" ,"Current"))
UnansweredQuestionsChart <- TidyJeopardyData %>%
group_by(Player) %>%
summarise(UnansweredQuestions = sum(is.na(CorrectAnswer))) %>%
arrange(desc(UnansweredQuestions))
UnansweredQuestionsChart <- ChartLevelsFunction(UnansweredQuestionsChart ,UnansweredQuestionsChart$UnansweredQuestions ,UnansweredQuestionsChart$Player)
ThreeDayCategories <- TidyJeopardyData %>%
filter(Player == "RoBert") %>%
group_by(Category) %>%
summarise(TotalQuestions = n()) %>%
filter(TotalQuestions == 3) %>%
select(Category) %>%
pull()
BestCategoriesChart <- TidyJeopardyData %>%
filter(Category %in% ThreeDayCategories) %>%
group_by(Category) %>%
summarise(TotalCorrect = sum(CorrectAnswer ,na.rm = T)
,TotalPoints = sum(CorrectAnswerPoints ,na.rm = T)) %>%
arrange(desc(TotalCorrect) ,desc(TotalPoints)) %>%
slice(1:5)
WorstCategoriesChart <- TidyJeopardyData %>%
filter(Category %in% ThreeDayCategories) %>%
group_by(Category) %>%
summarise(TotalCorrect = sum(CorrectAnswer ,na.rm = T)
,TotalPoints = sum(CorrectAnswerPoints ,na.rm = T)) %>%
arrange(TotalCorrect ,TotalPoints) %>%
slice(1:5)
BestCategoriesLevels <- BestCategoriesChart %>%
select(Category) %>%
pull()
WorstCategoriesLevels <- WorstCategoriesChart %>%
select(Category) %>%
pull()
BestCategoriesChart$Category <- factor(BestCategoriesChart$Category ,levels = rev(BestCategoriesLevels))
WorstCategoriesChart$Category <- factor(WorstCategoriesChart$Category ,levels = rev(WorstCategoriesLevels))
TidyJeopardyData %>%
select(Player) %>%
unique() %>%
pull()
PlayerListVector <- TidyJeopardyData %>%
select(Player) %>%
unique() %>%
pull()
NewSimilarityColumns <- str_c("SameAs" ,PlayerListVector)
JeopardyData
JeopardyData %>%
select(Date ,PlayerListVector)
SelectedJeopardyData <- JeopardyData %>%
select(Date ,PlayerListVector)
TidyJeopardyData %>%
left_join(SelectedJeopardyData ,by = "Date")
TidyJeopardyData <- TidyJeopardyData %>%
left_join(SelectedJeopardyData ,by = "Date")
as.numeric(TRUE)
as.numeric(FALSE)
as.numeric(NA)
1 == NA
NA==NA
TidyJeopardyData %>%
mutate(NewSimilarityColumns[1] = as.numeric(coalesce(CorrectAnswer ,-1)==coalesce(PlayerListVector[1] ,-1)))
TidyJeopardyData %>%
mutate(!!NewSimilarityColumns[1] = as.numeric(coalesce(CorrectAnswer ,-1)==coalesce(!!PlayerListVector[1] ,-1)))
TidyJeopardyData %>%
mutate(!!NewSimilarityColumns[1] := as.numeric(coalesce(CorrectAnswer ,-1)==coalesce(!!PlayerListVector[1] ,-1)))
TidyJeopardyData %>%
mutate(!!NewSimilarityColumns[1] := as.numeric(coalesce(CorrectAnswer ,-1)==coalesce(1 ,-1)))
TidyJeopardyData %>%
mutate(!!NewSimilarityColumns[1] := as.numeric(coalesce(CorrectAnswer ,-1)==coalesce(1 ,-1))) %>%
select(SameAsMatt ,everthing())
TidyJeopardyData %>%
mutate(!!NewSimilarityColumns[1] := as.numeric(coalesce(CorrectAnswer ,-1)==coalesce(1 ,-1))) %>%
select(SameAsMatt ,everything())
TidyJeopardyData %>%
select(!!PlayerListVector[1])
TidyJeopardyData %>%
mutate(!!NewSimilarityColumns[1] := as.numeric(coalesce(CorrectAnswer ,-1)==coalesce((!!PlayerListVector[1]) ,-1))) %>%
select(SameAsMatt ,everything())
rlang::last_error()
TidyJeopardyData %>%
mutate(!!NewSimilarityColumns[1] := as.numeric(coalesce(CorrectAnswer ,-1)==!!PlayerListVector[1])) %>%
select(SameAsMatt ,everything())
TidyJeopardyData %>%
mutate(!!NewSimilarityColumns[1] := as.numeric(coalesce(CorrectAnswer ,-1)==!!PlayerListVector[1])) %>%
select(SameAsMatt ,everything())
TidyJeopardyData %>%
mutate(!!NewSimilarityColumns[1] := as.numeric(CorrectAnswer==!!PlayerListVector[1])) %>%
select(SameAsMatt ,everything())
TidyJeopardyData %>%
mutate(!!NewSimilarityColumns[1] := as.numeric(CorrectAnswer==!!PlayerListVector[1])) %>%
select(SameAsMatt ,everything()) %>%
View()
TidyJeopardyData %>%
mutate(!!NewSimilarityColumns[1] := !!PlayerListVector[1]) %>%
select(SameAsMatt ,everything())
TidyJeopardyData %>%
mutate(!!NewSimilarityColumns[1] := (!!PlayerListVector[1])) %>%
select(SameAsMatt ,everything()) %>%
View()
TidyJeopardyData %>%
mutate(!!NewSimilarityColumns[1] := .[[!!PlayerListVector[1]]]) %>%
select(SameAsMatt ,everything())
TidyJeopardyData %>%
mutate(!!NewSimilarityColumns[1] := as.numeric(coalesce(CorrectAnswer ,-1)==coalesce(.[[!!PlayerListVector[1]]] ,-1))) %>%
select(SameAsMatt ,everything()) %>%
View()
for (i in 1:length(NewSimilarityColumns)) {
TestDataSet <- TidyJeopardyData %>%
mutate(!!NewSimilarityColumns[i] := as.numeric(coalesce(CorrectAnswer ,-1)==coalesce(.[[!!PlayerListVector[i]]] ,-1)))
}
View(TestDataSet)
for (i in 1:length(NewSimilarityColumns)) {
TidyJeopardyData <- TidyJeopardyData %>%
mutate(!!NewSimilarityColumns[i] := as.numeric(coalesce(CorrectAnswer ,-1)==coalesce(.[[!!PlayerListVector[i]]] ,-1)))
}
View(TidyJeopardyData)
TidyJeopardyData %>%
gather(key = "Competitor" ,value = "SameAnswer" ,NewSimilarityColumns)
TidyJeopardyData %>%
gather(key = "Competitor" ,value = "SameAnswer" ,NewSimilarityColumns) %>%
View()
PlayerSimilarityChart <- TidyJeopardyData %>%
gather(key = "Competitor" ,value = "SameAnswer" ,NewSimilarityColumns) %>%
mutate(Competitor = str_remove(Competitor ,pattern = "SameAs")) %>%
filter(Player != Competitor)
PlayerSimilarityData <- TidyJeopardyData %>%
gather(key = "Competitor" ,value = "SameAnswer" ,NewSimilarityColumns) %>%
mutate(Competitor = str_remove(Competitor ,pattern = "SameAs")) %>%
filter(Player != Competitor)
PlayerSimilarityData
PlayerSimilarityData %>%
group_by(Player ,Competitor) %>%
summarise(PercentSimilarity = sum(SameAnswer) / n())
PlayerSimilarityChart <- PlayerSimilarityData %>%
group_by(Player ,Competitor) %>%
summarise(PercentSimilarity = sum(SameAnswer) / n())
TidyJeopardyData %>%
group_by(Player) %>%
summarise(TotalCorrect = sum(CorrectAnswer)
,TotalPoints = sum(CorrectAnswerPoints)) %>%
arrange(desc(TotalCorrect) ,desc(TotalPoints) ,Player)
TidyJeopardyData %>%
group_by(Player) %>%
summarise(TotalCorrect = sum(CorrectAnswer)
,TotalPoints = sum(CorrectAnswerPoints)) %>%
arrange(desc(TotalCorrect) ,desc(TotalPoints) ,Player) %>%
select(Player) %>%
slice(1) %>%
pull()
TopPlayer <- TidyJeopardyData %>%
group_by(Player) %>%
summarise(TotalCorrect = sum(CorrectAnswer)
,TotalPoints = sum(CorrectAnswerPoints)) %>%
arrange(desc(TotalCorrect) ,desc(TotalPoints) ,Player) %>%
select(Player) %>%
slice(1) %>%
pull()
PlayerSimilarityChart
?scale_y_continuous
PlayerSimilarityData
PlayerSimilarityChart
PlayerSimilarityChart %>%
arrange(PercentSimilarity)
PlayerSimilarityChart %>%
arrange(PercentSimilarity) %>%
filter(!(Player %in% NotEnoughQuestionsAnsweredPlayers) & !(Competitor %in% NotEnoughQuestionsAnsweredPlayers))
PlayerSimilarityChart %>%
arrange(desc(PercentSimilarity)) %>%
filter(!(Player %in% NotEnoughQuestionsAnsweredPlayers) & !(Competitor %in% NotEnoughQuestionsAnsweredPlayers))
arrange(PlayerList)
order(PlayerList)
sort(PlayerList)
PlayerList
arrange(PlayerList ,Player)
TidyJeopardyData
TidyJeopardyData %>%
group_by(Player ,Value) %>%
summarise(CorrectAnswer = sum(CorrectAnswer))
TidyJeopardyData %>%
group_by(Player ,Value) %>%
summarise(CorrectAnswer = sum(CorrectAnswer))
ValueChart <- TidyJeopardyData %>%
group_by(Player ,Value) %>%
summarise(CorrectAnswer = sum(CorrectAnswer))
ValueChart %>%
select(Value) %>%
arrange(Value) %>%
unique() %>%
pull()
ValueChart %>%
ungroup() %>%
select(Value) %>%
arrange(Value) %>%
unique() %>%
pull()
ValueLevelsVecotr <- ValueChart %>%
ungroup() %>%
select(Value) %>%
arrange(Value) %>%
unique() %>%
pull()
ValueChart$Value <- factor(ValueChart$Value ,levels = ValueLevelsVector)
ValueLevelsVector <- ValueChart %>%
ungroup() %>%
select(Value) %>%
arrange(Value) %>%
unique() %>%
pull()
ValueChart$Value <- factor(ValueChart$Value ,levels = ValueLevelsVector)
ValueChart
TidyJeopardyData %>%
mutate(Value = str_c("$" ,Value)) %>%
group_by(Player ,Value) %>%
summarise(CorrectAnswer = sum(CorrectAnswer))
TidyJeopardyData %>%
group_by(Player) %>%
summarise(PercentCorrect = sum(CorrectAnswer ,na.rm = TRUE)/sum(!is.na(CorrectAnswer)))
PercentCorrectChart <- TidyJeopardyData %>%
group_by(Player) %>%
summarise(PercentCorrect = sum(CorrectAnswer ,na.rm = TRUE)/sum(!is.na(CorrectAnswer)))
PercentCorrectChart
ggplot(PercentCorrectChart ,aes(x = reorder(Player ,PercentCorrect ,FUN = function(x) {x}) ,y = PercentCorrect)) +
geom_col() +
coord_flip() +
scale_y_continuous(labels = scales::percent ,breaks = c(0 ,.25 ,.5 ,.75 ,1) ,limit = c(0 ,1)) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player") +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(MinTeammatePlusMinus ,MaxTeammatePlusMinus)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight()
PercentCorrectChart %>%
summarise(MinPercentCorrect = min(PercentCorrect)) %>%
pull()
MinPercentCorrect <- PercentCorrectChart %>%
summarise(MinPercentCorrect = min(PercentCorrect)) %>%
pull()
MaxPercentCorrect <- PercentCorrectChart %>%
summarise(MinPercentCorrect = max(PercentCorrect)) %>%
pull()
ggplot(PercentCorrectChart ,aes(x = reorder(Player ,PercentCorrect ,FUN = function(x) {x}) ,y = PercentCorrect ,fill = PercentCorrect)) +
geom_col() +
coord_flip() +
scale_y_continuous(labels = scales::percent ,breaks = c(0 ,.25 ,.5 ,.75 ,1) ,limit = c(0 ,1)) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player") +
scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(MinPercentCorrect ,MaxPercentCorrect)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight()
ggplot(PercentCorrectChart ,aes(x = reorder(Player ,PercentCorrect ,FUN = function(x) {x}) ,y = PercentCorrect ,fill = PercentCorrect)) +
geom_col() +
coord_flip() +
scale_y_continuous(labels = scales::percent ,breaks = c(0 ,.25 ,.5 ,.75 ,1) ,limit = c(0 ,1)) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player") +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(MinPercentCorrect ,MaxPercentCorrect)) +
scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight()
ggplot(PercentCorrectChart ,aes(x = reorder(Player ,PercentCorrect ,FUN = function(x) {x}) ,y = PercentCorrect ,fill = PercentCorrect)) +
geom_col() +
coord_flip() +
scale_y_continuous(labels = scales::percent ,breaks = c(0 ,.25 ,.5 ,.75 ,1) ,limit = c(0 ,1)) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player") +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(MinPercentCorrect ,MaxPercentCorrect)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight()
ggplot(PercentCorrectChart ,aes(x = reorder(Player ,PercentCorrect ,FUN = function(x) {x}) ,y = PercentCorrect ,fill = PercentCorrect)) +
geom_col() +
coord_flip() +
scale_y_continuous(labels = scales::percent ,breaks = c(0 ,.25 ,.5 ,.75 ,1) ,limit = c(0 ,1)) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player") +
scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(MinPercentCorrect ,MaxPercentCorrect)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight() +
theme(legend.position = "none")
TidyJeopardyData %>%
group_by(Player) %>%
summarise(CumulativePoints = sum(CorrectAnswerPoints))
TidyJeopardyData
TidyJeopardyData %>%
summarise(CumulativePoints = sum(CorrectAnswerPoints)) %>%
select(Date ,Player ,CorrectAnswerPoints ,CumulativePoints)
TidyJeopardyData %>%
mutate(CumulativePoints = sum(CorrectAnswerPoints)) %>%
select(Date ,Player ,CorrectAnswerPoints ,CumulativePoints)
TidyJeopardyData %>%
group_by(Player) %>%
mutate(CumulativePoints = cumsum(CorrectAnswerPoints))
TidyJeopardyData %>%
group_by(Player) %>%
mutate(CumulativePoints = cumsum(CorrectAnswerPoints)) %>%
select(Date ,Player ,CorrectAnswerPoints ,CumulativePoints)
TidyJeopardyData %>%
group_by(Player) %>%
mutate(CumulativePoints = cumsum(CorrectAnswerPoints)) %>%
select(Date ,Player ,CorrectAnswerPoints ,CumulativePoints) %>%
View()
PointsOverTimeData <- TidyJeopardyData %>%
group_by(Player) %>%
mutate(CumulativePoints = cumsum(coalesce(CorrectAnswerPoints ,0))) %>%
select(Date ,Player ,CorrectAnswerPoints ,CumulativePoints)
PointsOverTimeData
DateVector <- PointsOverTimeData %>%
ungroup() %>%
select(Date) %>%
unique() %>%
pull()
DateVector <- PointsOverTimeData %>%
ungroup() %>%
select(Date) %>%
arrange(Date) %>%
unique() %>%
pull()
IdVector <- seq(from = 1 ,to = length(DateVector) ,by = 1)
IdTable <- tibble(
Id = IdVector
,Date = DateVector
)
PointsOverTimeData
IdTable
PointsOverTimeData %>%
left_join(IdTable ,by = "Date") %>%
select(Id ,everything())
PointsOverTimeData <- PointsOverTimeData %>%
left_join(IdTable ,by = "Date") %>%
select(Id ,everything())
PointsOverTimeData
ggplot(PointsOverTimeData ,aes(x = Id ,y = CumulativePoints ,color = Player)) +
geom_line(alpha = .64) +
# coord_flip() +
scale_y_continuous(labels = scales::comma ,breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player") +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(MinTeammatePlusMinus ,MaxTeammatePlusMinus)) +
# scale_fill_brewer(palette = "Set1") +
scale_color_brewer(palette = "Set1") +
theme_fivethirtyeight()
ggplot(PointsOverTimeData ,aes(x = Id ,y = CumulativePoints ,color = Player)) +
geom_line(alpha = .64) +
# coord_flip() +
scale_y_continuous(labels = scales::comma ,breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player") +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(MinTeammatePlusMinus ,MaxTeammatePlusMinus)) +
# scale_fill_brewer(palette = "Set1") +
# scale(palette = "Set1") +
theme_fivethirtyeight()
ggplot(PointsOverTimeData ,aes(x = Id ,y = CumulativePoints ,color = Player)) +
geom_line(alpha = .64) +
# coord_flip() +
scale_y_continuous(labels = scales::comma ,breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player")
ggplot(PointsOverTimeData ,aes(x = Id ,y = CumulativePoints ,color = Player)) +
geom_line(alpha = .64) +
# coord_flip() +
scale_y_continuous(labels = scales::comma ,breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player") +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(MinTeammatePlusMinus ,MaxTeammatePlusMinus)) +
# scale_fill_brewer(palette = "Set1") +
scale_color_brewer(palette = "Set1") +
theme_bw()
ggplot(PointsOverTimeData ,aes(x = Id ,y = CumulativePoints ,color = Player)) +
geom_line(alpha = .64) +
# coord_flip() +
scale_y_continuous(labels = scales::comma ,breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player") +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(MinTeammatePlusMinus ,MaxTeammatePlusMinus)) +
# scale_fill_brewer(palette = "Set1") +
scale_color_brewer(palette = "Set2") +
theme_bw()
ggplot(PointsOverTimeData ,aes(x = Id ,y = CumulativePoints ,color = Player)) +
geom_line(alpha = .64) +
# coord_flip() +
scale_y_continuous(labels = scales::comma ,breaks = pretty_breaks()) +
# ggtitle("Points by Player") +
# theme(plot.title = element_text(hjust = 0.5)) +
labs(x = "Player") +
# scale_fill_gradientn(colors = c("darkred", "tomato1","palegreen", "darkgreen") ,limit = c(MinTeammatePlusMinus ,MaxTeammatePlusMinus)) +
# scale_fill_brewer(palette = "Set1") +
theme_fivethirtyeight()
?geom_line
